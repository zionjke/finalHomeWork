{"version":3,"sources":["css/Greeting.module.css","css/Skills.module.css","css/Form.module.css","css/App.module.css","css/Photo.module.css","css/Button.module.css","css/Input.module.css","components/Greeting.jsx","components/Photo.jsx","components/Skills.jsx","components/Button.jsx","components/Input.jsx","components/Form.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Greeting","render","className","styles","greeting","name","props","person","age","city","React","Component","Photo","photo","src","alt","Skills","skillsElement","skills","map","s","skill","key","text","list","Button","button","onClick","onAddFriendButtonClick","disabled","Input","input","ref","newFriendNameRef","onChange","buttonChange","placeholder","Form","newName","current","value","alert","addFriend","friendsElement","friends","f","form","form_text","friendsList","App","createRef","state","newFriend","newFriends","setState","container","header","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ac3ddff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__2r6gU\",\"name\":\"Greeting_name__1gCIu\",\"age\":\"Greeting_age__1Pki9\",\"city\":\"Greeting_city__2uGDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skills\":\"Skills_skills__oNnSF\",\"text\":\"Skills_text__CmKIS\",\"skill\":\"Skills_skill__3x8ls\",\"list\":\"Skills_list__wcoPy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1kKQ4\",\"input\":\"Form_input__13i2q\",\"friendsList\":\"Form_friendsList__2SLUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__39-0A\",\"container\":\"App_container__3NRnA\",\"header\":\"App_header__1gOST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Photo_photo__xNnC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__KRNEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__Iv1IJ\"};","import React from 'react';\r\nimport styles from '../css/Greeting.module.css'\r\n\r\nclass Greeting extends React.Component {\r\n\r\n  render = () => {\r\n    return (\r\n       <div className={styles.greeting}>\r\n           Привет бро, меня зовут <span className={styles.name}>{this.props.person.name}</span>,\r\n           мне <span className={styles.age}>{this.props.person.age}</span> год\r\n           и я живу в городе <span className={styles.city}>{this.props.person.city}</span>.\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Greeting;\r\n","import React from 'react';\r\nimport styles from '../css/Photo.module.css'\r\n\r\nclass Photo extends React.Component {\r\n\r\n  render = () => {\r\n    return (\r\n        <img className={styles.photo} src={this.props.photo} alt=\"photo\"/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Photo;\r\n","import React from 'react';\r\nimport styles from '../css/Skills.module.css'\r\n\r\nclass Skills extends React.Component {\r\n  render = () => {\r\n      let skillsElement = this.props.skills.map((s,skill) => {return ( <li key={skill}  className={styles.skill}>{s.skill}</li>)});\r\n    return (\r\n       <div className={styles.skills}>\r\n            <p className={styles.text}>\r\n                Наверное ты хочешь узнать меня немного больше? :)<br/>\r\n                Тогда вот тебе три качевства которыми я обладаю:\r\n            </p>\r\n           <ul className={styles.list}>\r\n               {skillsElement}\r\n           </ul>\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport styles from '../css/Button.module.css'\r\n\r\nclass Button extends React.Component {\r\n\r\n  render = () => {\r\n    return (\r\n        <button className={styles.button} onClick={this.props.onAddFriendButtonClick} disabled={this.props.disabled}  >\r\n            Отправить\r\n        </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styles from '../css/Input.module.css'\r\n\r\nclass Input extends React.Component {\r\n\r\n  render = () => {\r\n    return (\r\n        <input className={styles.input}\r\n               ref={this.props.newFriendNameRef}\r\n               onChange={this.props.buttonChange}\r\n               placeholder={this.props.placeholder}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport styles from '../css/Form.module.css'\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\n\r\nclass Form extends React.Component {\r\n\r\n    onAddFriendButtonClick = () => {\r\n        let newName = this.props.newFriendNameRef.current.value;\r\n            alert(\"Будем знакомы \" + newName + \" \" + \",\" +\"я добавлю тебя в список друзей\");\r\n            this.props.newFriendNameRef.current.value = \"\";\r\n            this.props.addFriend(newName);\r\n    };\r\n\r\n    render = () => {\r\n        let friendsElement = this.props.friends.map((f,name) => {\r\n            return (<li key={name}>{f.name}</li>)\r\n        });\r\n        return (\r\n            <div className={styles.form}>\r\n                <p className={styles.form_text}>Ну что, пришло время познакомится? :)</p>\r\n                <Input newFriendNameRef={this.props.newFriendNameRef}\r\n                       buttonChange={this.props.buttonChange}\r\n                       placeholder={\"Имя:\"}/>\r\n                <Button onAddFriendButtonClick={this.onAddFriendButtonClick}\r\n                        disabled={this.props.disabled}/>\r\n                <p className={styles.form_text}>Список друзей самураев:</p>\r\n                <ul className={styles.friendsList}>\r\n                    {friendsElement}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport styles from './css/App.module.css'\r\nimport Greeting from \"./components/Greeting\";\r\nimport Photo from \"./components/Photo\";\r\nimport Skills from \"./components/Skills\";\r\nimport Form from \"./components/Form\";\r\n\r\nclass App extends React.Component {\r\n    newFriendNameRef = React.createRef();\r\n    state = {\r\n        person: {\r\n            name: \"Васильев Артем\",\r\n            age: 31,\r\n            city: \"Киев\",\r\n            photo: \"https://cdn1.savepice.ru/uploads/2020/2/26/59dde4d8c95c90836dc97fdedc378fba-full.jpg\"\r\n        },\r\n        skills: [\r\n            {skill: \"Непреклонный\"},\r\n            {skill: \"Трудолюбивый\"},\r\n            {skill: \"Порядочный\"}\r\n        ],\r\n\r\n        friends: [\r\n            {name:\"\"}\r\n        ],\r\n\r\n        disabled: true\r\n    };\r\n\r\n    addFriend = (newName) => {\r\n        let newFriend = {\r\n            name: newName\r\n        };\r\n        let newFriends = [...this.state.friends, newFriend];\r\n        this.setState({\r\n            friends: newFriends\r\n        });\r\n        this.setState({\r\n            disabled: true\r\n        });\r\n    };\r\n\r\n    buttonChange = () => {\r\n        if(this.newFriendNameRef.current.value === \"\") {\r\n            this.setState({\r\n                disabled: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                disabled: false\r\n            });\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div className={styles.App}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.header}>\r\n                        <Greeting person={this.state.person}/>\r\n                        <Photo photo={this.state.person.photo}/>\r\n                    </div>\r\n                    <Skills skills={this.state.skills}/>\r\n                    <Form friends={this.state.friends}\r\n                          addFriend={this.addFriend}\r\n                          buttonChange={ this.buttonChange}\r\n                          disabled={this.state.disabled}\r\n                          newFriendNameRef={this.newFriendNameRef}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}